{"version":3,"sources":["components/Header/index.js","components/Board/index.js","image.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","Fragment","className","message","score","total","Board","id","images","map","image","style","backgroundColor","color","key","index","onClick","clickHandler","App","state","clicked","highScore","setGame","handleImageClickById","imageId","_this","slice","console","log","findIndex","item","push","setState","sort","Math","random","components_Header","this","length","components_Board","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.dd1e5d44.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header(props) {\n    return <>\n        <header>\n            <div className=\"title\">50 Shades of Grey</div>\n            <div className=\"message\">{props.message}</div>\n            <div className=\"score\">Score {props.score} of {props.total}</div>\n        </header>\n        <br />\n    </>\n}\n\nexport default Header;","import React from 'react';\n\nfunction Board(props) {\n  return <div className=\"grid-container\">\n    <div id=\"board\">\n      {props.images.map(image => (\n        <div style={{ backgroundColor: image.color }} className=\"image grid-item\" id={\"image-\" + image} key={image.index} onClick={() => { props.clickHandler(image.index) }} ></div>\n      ))}\n    </div>\n  </div>\n}\n\nexport default Board;","const images = [{ color: \"#272727\", index: 1 }, { color: \"#292929\", index: 2 }, { color: \"#2c2c2c\", index: 3 }, { color: \"#313131\", index: 4 }, { color: \"#343434\", index: 5 }, { color: \"#373737\", index: 6 }, { color: \"#3a3a3a\", index: 7 }, { color: \"#3f3f3f\", index: 8 }, { color: \"#424242\", index: 9 }, { color: \"#454545\", index: 10 }, { color: \"#484848\", index: 11 }, { color: \"#4b4b4b\", index: 12 }, { color: \"#4e4e4e\", index: 13 }, { color: \"#515151\", index: 14 }, { color: \"#565656\", index: 15 }, { color: \"#585858\", index: 16 }, { color: \"#5b5b5b\", index: 17 }, { color: \"#5e5e5e\", index: 18 }, { color: \"#626262\", index: 19 }, { color: \"#656565\", index: 20 }, { color: \"#6a6a6a\", index: 21 }, { color: \"#6c6c6c\", index: 22 }, { color: \"#6f6f6f\", index: 23 }, { color: \"#737373\", index: 24 }, { color: \"#767676\", index: 25 }, { color: \"#7b7b7b\", index: 26 }, { color: \"#7d7d7d\", index: 27 }, { color: \"#808080\", index: 28 }, { color: \"#818181\", index: 29 }, { color: \"#838383\", index: 30 }, { color: \"#868686\", index: 31 }, { color: \"#878787\", index: 32 }, { color: \"#898989\", index: 33 }, { color: \"#8b8b8b\", index: 34 }, { color: \"#8d8d8d\", index: 35 }, { color: \"#919191\", index: 36 }, { color: \"#939393\", index: 37 }, { color: \"#959595\", index: 38 }, { color: \"#979797\", index: 39 }, { color: \"#999999\", index: 40 }, { color: \"#9b9b9b\", index: 41 }, { color: \"#9d9d9d\", index: 42 }, { color: \"#9f9f9f\", index: 43 }, { color: \"#a0a0a0\", index: 44 }, { color: \"#a2a2a2\", index: 45 }, { color: \"#a5a5a5\", index: 46 }, { color: \"#a7a7a7\", index: 47 }, { color: \"#a9a9a9\", index: 48 }, { color: \"#ababab\", index: 49 }, { color: \"#aeaeae\", index: 50 },];\n\nexport default images;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Board from \"./components/Board\"\nimport images from './image'\n\nclass App extends Component {\n  state = {\n    message: \"Click all 50 shades of grey without clicking one twice\",\n    score: 0,\n    images: images,\n    clicked: [],\n    highScore: 0\n  };\n\n  setGame = () => {\n\n  }\n\n  handleImageClickById = (imageId) => {\n    let clicked = this.state.clicked.slice(0);\n    console.log(\"Checking\", clicked, imageId);\n    // is this imageId in clicked\n    if (clicked.findIndex(item => imageId === item) === -1) {\n      clicked.push(imageId);\n      this.setState({\n        \"clicked\": clicked,\n        \"score\": this.state.score + 1,\n        \"message\": \"You're dominating! Keep Clicking.\"\n      })\n    }\n\n    else if (this.state.score === 50) {\n      this.setState({\n        \"message\": \"Winner Winner, Chicken Dinner.\"\n      })\n    }\n\n    else {\n      // you lose, start over\n      this.setState({\n        \"message\": \"You got beat into submission :(\",\n        \"score\": 0,\n        \"clicked\": []\n      })\n    }\n    // rearrange images\n    let images = this.state.images.slice(0);\n    images.sort(() => Math.random() - 0.5);\n    this.setState({ images });\n    console.log(\"handling click for \", imageId);\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header\n          message={this.state.message}\n          score={this.state.score}\n          total={this.state.images.length} />\n        <Board\n          images={this.state.images}\n          clickHandler={this.handleImageClickById}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}